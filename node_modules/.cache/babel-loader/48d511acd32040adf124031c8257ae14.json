{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/src/components/Device/TimerContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // Action creators.\n\nimport { updateDeviceConfig } from '../../actions'; // material-ui components.\n\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop'; // Component style.\n\nconst styles = theme => createStyles({\n  timerContainer: {\n    textAlign: 'center',\n    backgroundColor: '#323039',\n    padding: theme.spacing(1),\n    marginTop: '0px',\n    display: 'flex'\n  },\n  nameContainer: {\n    fontSize: '12px',\n    color: '#FFFFFF',\n    marginTop: '30px'\n  },\n  hourContainer: {\n    backgroundColor: '#474453',\n    color: 'white'\n  },\n  arrowIcon: {\n    marginTop: '10px'\n  },\n  timer: {\n    color: 'white'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#00EAA6'\n  }\n});\n\nclass TimerContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      snackMessage: '',\n      trans: false,\n      timerState: true,\n      timerOn: this.props.timerOn,\n      timerOff: this.props.timerOff\n    };\n\n    this.stateToConfig = (duty, state, timerOn, timerOff, timerState, alias, deviceId) => {\n      return {\n        config: {\n          duty,\n          state,\n          timerOn,\n          timerOff,\n          timerState,\n          alias\n        },\n        deviceId\n      };\n    };\n\n    this.switchOnTimer = async event => {\n      this.setState({\n        snackOpen: false\n      });\n      this.setState({\n        trans: true\n      });\n      const _this$props = this.props,\n            duty = _this$props.duty,\n            state = _this$props.state,\n            timerOn = _this$props.timerOn,\n            timerOff = _this$props.timerOff,\n            deviceId = _this$props.deviceId,\n            alias = _this$props.alias,\n            index = _this$props.index;\n      const deviceConfig = this.stateToConfig(duty, state, timerOn, timerOff, event.target.checked, alias, deviceId);\n      await this.props.updateDeviceConfig(deviceConfig, index);\n      this.setState({\n        trans: false\n      });\n      this.setState({\n        snackOpen: true,\n        snackMessage: 'Timer actualizado'\n      });\n    };\n\n    this.timerOnChange = async event => {\n      this.setState({\n        timerOn: event.target.value\n      });\n    };\n\n    this.timerOnRelease = async event => {\n      this.setState({\n        snackOpen: false\n      });\n      this.setState({\n        trans: true\n      });\n      const _this$props2 = this.props,\n            duty = _this$props2.duty,\n            state = _this$props2.state,\n            timerOff = _this$props2.timerOff,\n            timerState = _this$props2.timerState,\n            deviceId = _this$props2.deviceId,\n            alias = _this$props2.alias,\n            index = _this$props2.index;\n      const deviceConfig = this.stateToConfig(duty, state, this.state.timerOn, timerOff, timerState, alias, deviceId);\n      await this.props.updateDeviceConfig(deviceConfig, index);\n      this.setState({\n        trans: false\n      });\n      this.setState({\n        snackOpen: true,\n        snackMessage: 'Timer actualizado'\n      });\n    };\n\n    this.timerOffChange = async event => {\n      this.setState({\n        timerOff: event.target.value\n      });\n    };\n\n    this.timerOffRelease = async event => {\n      this.setState({\n        snackOpen: false\n      });\n      this.setState({\n        trans: true\n      });\n      const _this$props3 = this.props,\n            duty = _this$props3.duty,\n            state = _this$props3.state,\n            timerOn = _this$props3.timerOn,\n            timerState = _this$props3.timerState,\n            deviceId = _this$props3.deviceId,\n            alias = _this$props3.alias,\n            index = _this$props3.index;\n      const deviceConfig = this.stateToConfig(duty, state, timerOn, this.state.timerOff, timerState, alias, deviceId);\n      await this.props.updateDeviceConfig(deviceConfig, index);\n      this.setState({\n        trans: false\n      });\n      this.setState({\n        snackOpen: true,\n        snackMessage: 'Timer actualizado'\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const timerState = this.props.timerState;\n    const _this$state = this.state,\n          snackOpen = _this$state.snackOpen,\n          snackMessage = _this$state.snackMessage,\n          timerOn = _this$state.timerOn,\n          timerOff = _this$state.timerOff,\n          trans = _this$state.trans;\n    return React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Ciclo: Encendido/Apagado\"), React.createElement(Box, {\n      width: \"100%\",\n      className: classes.timerContainer,\n      borderRadius: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Box, {\n      width: \"45%\",\n      className: classes.hourContainer,\n      borderRadius: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"timeOn\",\n      label: \"Encendido\",\n      type: \"time\",\n      value: timerOn,\n      onChange: this.timerOnChange,\n      onBlur: this.timerOnRelease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })))), React.createElement(ArrowRightIcon, {\n      className: classes.arrowIcon,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Box, {\n      width: \"45%\",\n      className: classes.hourContainer,\n      borderRadius: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"timeOff\",\n      label: \"Apagado\",\n      type: \"time\",\n      value: timerOff,\n      onChange: this.timerOffChange,\n      onBlur: this.timerOffRelease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))), React.createElement(Switch, {\n      checked: timerState,\n      value: \"state\",\n      onChange: this.switchOnTimer,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      onClose: () => {\n        this.setState({\n          snackOpen: false\n        });\n      },\n      open: snackOpen,\n      autoHideDuration: 2000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(SnackbarContent, {\n      style: {\n        backgroundColor: '#00EAA6',\n        color: 'white'\n      },\n      message: snackMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(Backdrop, {\n      className: classes.backdrop,\n      open: trans,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return state.devices[ownProps.index];\n};\n\nexport default connect(mapStateToProps, {\n  updateDeviceConfig\n})(withStyles(styles)(TimerContainer));","map":{"version":3,"sources":["/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/src/components/Device/TimerContainer.js"],"names":["React","Component","connect","updateDeviceConfig","withStyles","createStyles","Box","Switch","Typography","ArrowRightIcon","TextField","Snackbar","SnackbarContent","CircularProgress","Backdrop","styles","theme","timerContainer","textAlign","backgroundColor","padding","spacing","marginTop","display","nameContainer","fontSize","color","hourContainer","arrowIcon","timer","backdrop","zIndex","drawer","TimerContainer","state","snackMessage","trans","timerState","timerOn","props","timerOff","stateToConfig","duty","alias","deviceId","config","switchOnTimer","event","setState","snackOpen","index","deviceConfig","target","checked","timerOnChange","value","timerOnRelease","timerOffChange","timerOffRelease","render","classes","vertical","horizontal","mapStateToProps","ownProps","devices"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Action creators.\nimport {updateDeviceConfig} from '../../actions';\n\n// material-ui components.\nimport {withStyles, createStyles} from '@material-ui/core/styles';\nimport {Box} from '@material-ui/core';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n// Component style.\nconst styles = (theme) =>\n  createStyles({\n    timerContainer: {\n      textAlign: 'center',\n      backgroundColor: '#323039',\n      padding: theme.spacing(1),\n      marginTop: '0px',\n      display: 'flex',\n    },\n    nameContainer: {\n      fontSize: '12px',\n      color: '#FFFFFF',\n      marginTop: '30px',\n    },\n    hourContainer: {\n      backgroundColor: '#474453',\n      color: 'white',\n    },\n    arrowIcon: {\n      marginTop: '10px',\n    },\n    timer: {\n      color: 'white',\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#00EAA6',\n    },\n  });\n\nclass TimerContainer extends Component {\n  // Component state.\n  state = {\n    snackMessage: '',\n    trans: false,\n    timerState: true,\n    timerOn: this.props.timerOn,\n    timerOff: this.props.timerOff,\n  };\n\n  // Map device state to configuration readable by the backend.\n  stateToConfig = (duty, state, timerOn, timerOff, timerState, alias, deviceId) => {\n    return {config: {duty, state, timerOn, timerOff, timerState, alias}, deviceId};\n  };\n\n  // Modify the state of timer state to on to off.\n  switchOnTimer = async (event) => {\n    this.setState({snackOpen: false});\n    this.setState({trans: true});\n    const {duty, state, timerOn, timerOff, deviceId, alias, index} = this.props;\n    const deviceConfig = this.stateToConfig(duty, state, timerOn, timerOff, event.target.checked, alias, deviceId);\n    await this.props.updateDeviceConfig(deviceConfig, index);\n    this.setState({trans: false});\n    this.setState({snackOpen: true, snackMessage: 'Timer actualizado'});\n  };\n\n  timerOnChange = async (event) => {\n    this.setState({timerOn: event.target.value});\n  };\n\n  timerOnRelease = async (event) => {\n    this.setState({snackOpen: false});\n    this.setState({trans: true});\n    const {duty, state, timerOff, timerState, deviceId, alias, index} = this.props;\n    const deviceConfig = this.stateToConfig(duty, state, this.state.timerOn, timerOff, timerState, alias, deviceId);\n    await this.props.updateDeviceConfig(deviceConfig, index);\n    this.setState({trans: false});\n    this.setState({snackOpen: true, snackMessage: 'Timer actualizado'});\n  };\n\n  timerOffChange = async (event) => {\n    this.setState({timerOff: event.target.value});\n  };\n\n  timerOffRelease = async (event) => {\n    this.setState({snackOpen: false});\n    this.setState({trans: true});\n    const {duty, state, timerOn, timerState, deviceId, alias, index} = this.props;\n    const deviceConfig = this.stateToConfig(duty, state, timerOn, this.state.timerOff, timerState, alias, deviceId);\n    await this.props.updateDeviceConfig(deviceConfig, index);\n    this.setState({trans: false});\n    this.setState({snackOpen: true, snackMessage: 'Timer actualizado'});\n  };\n\n  render() {\n    const {classes} = this.props;\n    const {timerState} = this.props;\n\n    const {snackOpen, snackMessage, timerOn, timerOff, trans} = this.state;\n\n    return (\n      <Box>\n        <Typography className={classes.nameContainer}>Ciclo: Encendido/Apagado</Typography>\n        <Box width=\"100%\" className={classes.timerContainer} borderRadius={12}>\n          <Box width=\"45%\" className={classes.hourContainer} borderRadius={12}>\n            <div className={classes.timer}>\n              <form noValidate>\n                <TextField\n                  id=\"timeOn\"\n                  label=\"Encendido\"\n                  type=\"time\"\n                  value={timerOn}\n                  onChange={this.timerOnChange}\n                  onBlur={this.timerOnRelease}\n                />\n              </form>\n            </div>\n          </Box>\n          <ArrowRightIcon className={classes.arrowIcon} color=\"secondary\" />\n          <Box width=\"45%\" className={classes.hourContainer} borderRadius={12}>\n            <div className={classes.timer}>\n              <form noValidate>\n                <TextField\n                  id=\"timeOff\"\n                  label=\"Apagado\"\n                  type=\"time\"\n                  value={timerOff}\n                  onChange={this.timerOffChange}\n                  onBlur={this.timerOffRelease}\n                />\n              </form>\n            </div>\n          </Box>\n          <Switch checked={timerState} value=\"state\" onChange={this.switchOnTimer} color=\"primary\" />\n        </Box>\n\n        <Snackbar\n          anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n          onClose={() => {\n            this.setState({snackOpen: false});\n          }}\n          open={snackOpen}\n          autoHideDuration={2000}\n        >\n          <SnackbarContent\n            style={{\n              backgroundColor: '#00EAA6',\n              color: 'white',\n            }}\n            message={snackMessage}\n          />\n        </Snackbar>\n\n        <Backdrop className={classes.backdrop} open={trans}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return state.devices[ownProps.index];\n};\n\nexport default connect(mapStateToProps, {updateDeviceConfig})(withStyles(styles)(TimerContainer));\n"]},"metadata":{},"sourceType":"module"}