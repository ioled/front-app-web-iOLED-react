{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/src/components/Device/DeviceMenu.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; // Action creators.\n\nimport { deleteDevice } from '../../actions'; // material-ui components.\n\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert'; // Component style.\n\nconst styles = theme => createStyles({\n  moreButton: {\n    marginRight: '-16px'\n  },\n  menu: {\n    maxHeight: 200 * 4.5,\n    width: 200\n  },\n  item: {\n    fontSize: '12px'\n  }\n}); // Menu items.\n// const options = ['editar','Eliminar'];\n\n\nconst options = ['Eliminar'];\n\nclass DeviceMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n  }\n\n  // Render the menu items.\n  renderMenuItems() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          deviceId = _this$props.deviceId;\n    return options.map(option => {\n      if (option === 'Eliminar') {\n        return React.createElement(MenuItem, {\n          key: option,\n          onClick: () => {\n            this.props.deleteDevice({\n              deviceId\n            });\n          },\n          className: classes.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, option);\n      } else {\n        return React.createElement(MenuItem, {\n          key: option,\n          onClick: this.handleClose,\n          className: classes.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, option);\n      }\n    });\n  } // Render the component.\n\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.moreButton,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MoreVertIcon, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      anchorEl: anchorEl,\n      open: open,\n      onClose: this.handleClose,\n      className: classes.menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.renderMenuItems()));\n  }\n\n}\n\nexport default connect(null, {\n  deleteDevice\n})(withStyles(styles)(DeviceMenu));","map":{"version":3,"sources":["/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/src/components/Device/DeviceMenu.js"],"names":["React","Component","Fragment","connect","deleteDevice","withStyles","createStyles","IconButton","Menu","MenuItem","MoreVertIcon","styles","theme","moreButton","marginRight","menu","maxHeight","width","item","fontSize","options","DeviceMenu","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","renderMenuItems","props","classes","deviceId","map","option","render","open","Boolean"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n// Action creators.\nimport {deleteDevice} from '../../actions';\n\n// material-ui components.\nimport {withStyles, createStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n// Component style.\nconst styles = (theme) =>\n  createStyles({\n    moreButton: {\n      marginRight: '-16px',\n    },\n    menu: {\n      maxHeight: 200 * 4.5,\n      width: 200,\n    },\n    item: {\n      fontSize: '12px',\n    },\n  });\n\n// Menu items.\n// const options = ['editar','Eliminar'];\nconst options = ['Eliminar'];\n\nclass DeviceMenu extends Component {\n  // The DOM element used to set the position of the menu.\n\n  state = {\n    anchorEl: null,\n  };\n\n  // Menu button open handler.\n  handleClick = (event) => {\n    this.setState({anchorEl: event.currentTarget});\n  };\n\n  // Menu button close handler.\n  handleClose = () => {\n    this.setState({anchorEl: null});\n  };\n\n  // Render the menu items.\n  renderMenuItems() {\n    const {classes, deviceId} = this.props;\n    return options.map((option) => {\n      if (option === 'Eliminar') {\n        return (\n          <MenuItem\n            key={option}\n            onClick={() => {\n              this.props.deleteDevice({deviceId});\n            }}\n            className={classes.item}\n          >\n            {option}\n          </MenuItem>\n        );\n      } else {\n        return (\n          <MenuItem key={option} onClick={this.handleClose} className={classes.item}>\n            {option}\n          </MenuItem>\n        );\n      }\n    });\n  }\n\n  // Render the component.\n  render() {\n    const {classes} = this.props;\n    const {anchorEl} = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <Fragment>\n        <IconButton className={classes.moreButton} onClick={this.handleClick}>\n          <MoreVertIcon color=\"secondary\" />\n        </IconButton>\n        <Menu anchorEl={anchorEl} open={open} onClose={this.handleClose} className={classes.menu}>\n          {this.renderMenuItems()}\n        </Menu>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(null, {deleteDevice})(withStyles(styles)(DeviceMenu));\n"]},"metadata":{},"sourceType":"module"}