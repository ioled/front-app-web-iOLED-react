{"ast":null,"code":"var _jsxFileName = \"/home/dixon/iOLED/front-app-web-iOLED-react/src/components/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withStyles, createStyles } from '@material-ui/core/styles'; // Action Creators.\n\nimport { fetchUser } from '../actions'; // Components.\n\nimport Dashboard from './Dashboard/Dashboard';\nimport Login from './Dashboard/Login';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop'; // Component style.\n\nconst styles = theme => createStyles({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#00EAA6'\n  }\n});\n\nclass App extends Component {\n  /* This call fetch user on component first mount.\n   * It is better location than componentWillMount,\n   * since the last is called multiple times.\n   */\n  componentDidMount() {\n    this.props.fetchUser();\n  } // Render the navbar depending the auth state.\n\n\n  authContentRender() {\n    // const {user} = this.props;\n    const _this$props = this.props,\n          user = _this$props.user,\n          classes = _this$props.classes;\n\n    switch (user) {\n      case null:\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Backdrop, {\n          className: classes.backdrop,\n          open: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(CircularProgress, {\n          color: \"inherit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })));\n\n      case false:\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Login, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n\n      default:\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Dashboard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n    }\n  } // Render the component.\n\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.authContentRender()));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => {\n  return {\n    user\n  };\n}; // Connect this component to redux and the action creators.\n\n\nexport default connect(mapStateToProps, {\n  fetchUser\n})(withStyles(styles)(App));","map":{"version":3,"sources":["/home/dixon/iOLED/front-app-web-iOLED-react/src/components/App.js"],"names":["React","Component","Fragment","BrowserRouter","connect","withStyles","createStyles","fetchUser","Dashboard","Login","CssBaseline","CircularProgress","Backdrop","styles","theme","backdrop","zIndex","drawer","color","App","componentDidMount","props","authContentRender","user","classes","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,0BAAvC,C,CAEA;;AACA,SAAQC,SAAR,QAAwB,YAAxB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IACbR,YAAY,CAAC;AACXS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaC,MAAb,GAAsB,CADtB;AAERC,IAAAA,KAAK,EAAE;AAFC;AADC,CAAD,CADd;;AAQA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAC1B;;;;AAIAmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWd,SAAX;AACD,GAPyB,CAS1B;;;AACAe,EAAAA,iBAAiB,GAAG;AAClB;AADkB,wBAEM,KAAKD,KAFX;AAAA,UAEXE,IAFW,eAEXA,IAFW;AAAA,UAELC,OAFK,eAELA,OAFK;;AAIlB,YAAQD,IAAR;AACE,WAAK,IAAL;AACE,eACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,SAAS,EAAEC,OAAO,CAACT,QAA7B;AAAuC,UAAA,IAAI,EAAE,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF;;AAOF,WAAK,KAAL;AACE,eACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;;AAKF;AACE,eACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAhBJ;AAsBD,GApCyB,CAsC1B;;;AACAU,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKH,iBAAL,EAFH,CADF,CADF;AAQD;;AAhDyB;;AAmD5B,MAAMI,eAAe,GAAG,CAAC;AAACH,EAAAA;AAAD,CAAD,KAAY;AAClC,SAAO;AAACA,IAAAA;AAAD,GAAP;AACD,CAFD,C,CAIA;;;AACA,eAAenB,OAAO,CAACsB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAsCF,UAAU,CAACQ,MAAD,CAAV,CAAmBM,GAAnB,CAAtC,CAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {withStyles, createStyles} from '@material-ui/core/styles';\n\n// Action Creators.\nimport {fetchUser} from '../actions';\n\n// Components.\nimport Dashboard from './Dashboard/Dashboard';\nimport Login from './Dashboard/Login';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n// Component style.\nconst styles = (theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#00EAA6',\n    },\n  });\n\nclass App extends Component {\n  /* This call fetch user on component first mount.\n   * It is better location than componentWillMount,\n   * since the last is called multiple times.\n   */\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  // Render the navbar depending the auth state.\n  authContentRender() {\n    // const {user} = this.props;\n    const {user, classes} = this.props;\n\n    switch (user) {\n      case null:\n        return (\n          <Fragment>\n            <Backdrop className={classes.backdrop} open={true}>\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </Fragment>\n        );\n      case false:\n        return (\n          <Fragment>\n            <Login />\n          </Fragment>\n        );\n      default:\n        return (\n          <Fragment>\n            <Dashboard />\n          </Fragment>\n        );\n    }\n  }\n\n  // Render the component.\n  render() {\n    return (\n      <BrowserRouter>\n        <Fragment>\n          <CssBaseline />\n          {this.authContentRender()}\n        </Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = ({user}) => {\n  return {user};\n};\n\n// Connect this component to redux and the action creators.\nexport default connect(mapStateToProps, {fetchUser})(withStyles(styles)(App));\n"]},"metadata":{},"sourceType":"module"}