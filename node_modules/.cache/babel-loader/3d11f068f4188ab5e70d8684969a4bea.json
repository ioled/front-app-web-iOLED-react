{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/src/components/Device/SliderContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // Action creators.\n\nimport { updateDeviceConfig } from '../../actions'; // material-ui components.\n\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop'; // Component style.\n\nconst styles = theme => createStyles({\n  sliderContainer: {\n    textAlign: 'center',\n    backgroundColor: '#323039',\n    padding: theme.spacing(1),\n    marginTop: '0px'\n  },\n  nameContainer: {\n    fontSize: '12px',\n    color: '#FFFFFF',\n    marginTop: '30px'\n  },\n  rangeLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    color: 'white',\n    fontSize: '12px'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#00EAA6'\n  }\n});\n\nconst IoledSlider = withStyles({\n  root: {\n    height: 10\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)'\n  },\n  rail: {\n    backgroundImage: 'linear-gradient(90deg, #29ABE2 0%, #00EAA6 100%)',\n    height: 8,\n    borderRadius: 4\n  },\n  track: {\n    backgroundImage: 'linear-gradient(90deg, #29ABE2 0%, #00EAA6 100%)',\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\n\nclass SliderContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tempDuty: this.props.duty,\n      trans: false\n    };\n\n    this.stateToConfig = (duty, state, timerOn, timerOff, timerState, alias, deviceId) => {\n      return {\n        config: {\n          duty,\n          state,\n          timerOn,\n          timerOff,\n          timerState,\n          alias\n        },\n        deviceId\n      };\n    };\n\n    this.sliderOnChangeHandler = (event, value) => {\n      if (event.type === 'click') {\n        this.setState({\n          tempDuty: parseFloat(value.toFixed(2))\n        }, this.sliderOnReleaseHandler);\n      }\n\n      this.setState({\n        tempDuty: parseFloat(value.toFixed(2))\n      });\n    };\n\n    this.sliderOnReleaseHandler = async () => {\n      if (this.state.tempDuty !== this.props.duty) {\n        this.setState({\n          trans: true\n        });\n        this.setState({\n          snackOpen: false\n        });\n        const _this$props = this.props,\n              state = _this$props.state,\n              timerOn = _this$props.timerOn,\n              timerOff = _this$props.timerOff,\n              timerState = _this$props.timerState,\n              deviceId = _this$props.deviceId,\n              alias = _this$props.alias,\n              index = _this$props.index;\n        const deviceConfig = this.stateToConfig(this.state.tempDuty, state, timerOn, timerOff, timerState, alias, deviceId);\n        await this.props.updateDeviceConfig(deviceConfig, index);\n\n        if (this.state.tempDuty !== this.props.duty) {\n          this.setState({\n            tempDuty: this.props.duty\n          });\n        }\n\n        this.setState({\n          trans: false\n        });\n        this.setState({\n          snackOpen: true,\n          snackMessage: 'Dispositivo actualizado'\n        });\n      }\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          snackOpen = _this$state.snackOpen,\n          snackMessage = _this$state.snackMessage,\n          tempDuty = _this$state.tempDuty,\n          trans = _this$state.trans;\n    return React.createElement(Box, {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Control de intensidad\"), React.createElement(Box, {\n      width: \"100%\",\n      className: classes.sliderContainer,\n      borderRadius: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.rangeLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"0%\"), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"100%\")), React.createElement(\"div\", {\n      className: classes.dutyContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(IoledSlider, {\n      value: tempDuty,\n      min: 0,\n      max: 1,\n      step: 0.05,\n      valueLabelDisplay: \"auto\",\n      onChange: this.sliderOnChangeHandler,\n      onChangeCommitted: this.sliderOnReleaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      onClose: () => {\n        this.setState({\n          snackOpen: false\n        });\n      },\n      open: snackOpen,\n      autoHideDuration: 2000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(SnackbarContent, {\n      style: {\n        backgroundColor: '#00EAA6',\n        color: 'white'\n      },\n      message: snackMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(Backdrop, {\n      className: classes.backdrop,\n      open: trans,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return state.devices[ownProps.index];\n};\n\nexport default connect(mapStateToProps, {\n  updateDeviceConfig\n})(withStyles(styles)(SliderContainer));","map":{"version":3,"sources":["/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/src/components/Device/SliderContainer.js"],"names":["React","Component","connect","updateDeviceConfig","withStyles","createStyles","Box","Slider","Typography","Snackbar","SnackbarContent","CircularProgress","Backdrop","styles","theme","sliderContainer","textAlign","backgroundColor","padding","spacing","marginTop","nameContainer","fontSize","color","rangeLabel","display","justifyContent","backdrop","zIndex","drawer","IoledSlider","root","height","thumb","width","border","marginLeft","boxShadow","active","valueLabel","left","rail","backgroundImage","borderRadius","track","SliderContainer","state","tempDuty","props","duty","trans","stateToConfig","timerOn","timerOff","timerState","alias","deviceId","config","sliderOnChangeHandler","event","value","type","setState","parseFloat","toFixed","sliderOnReleaseHandler","snackOpen","index","deviceConfig","snackMessage","render","classes","dutyContainer","vertical","horizontal","mapStateToProps","ownProps","devices"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Action creators.\nimport {updateDeviceConfig} from '../../actions';\n\n// material-ui components.\nimport {withStyles, createStyles} from '@material-ui/core/styles';\nimport {Box} from '@material-ui/core';\n\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n// Component style.\nconst styles = (theme) =>\n  createStyles({\n    sliderContainer: {\n      textAlign: 'center',\n      backgroundColor: '#323039',\n      padding: theme.spacing(1),\n      marginTop: '0px',\n    },\n    nameContainer: {\n      fontSize: '12px',\n      color: '#FFFFFF',\n      marginTop: '30px',\n    },\n    rangeLabel: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      color: 'white',\n      fontSize: '12px',\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#00EAA6',\n    },\n  });\n\nconst IoledSlider = withStyles({\n  root: {\n    height: 10,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  rail: {\n    backgroundImage: 'linear-gradient(90deg, #29ABE2 0%, #00EAA6 100%)',\n    height: 8,\n    borderRadius: 4,\n  },\n  track: {\n    backgroundImage: 'linear-gradient(90deg, #29ABE2 0%, #00EAA6 100%)',\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nclass SliderContainer extends Component {\n  // Component state.\n  state = {\n    tempDuty: this.props.duty,\n    trans: false,\n  };\n\n  // Map device state to configuration readable by the backend.\n  stateToConfig = (duty, state, timerOn, timerOff, timerState, alias, deviceId) => {\n    return {config: {duty, state, timerOn, timerOff, timerState, alias}, deviceId};\n  };\n\n  /* Change the intensity of the led.\n   * Triggers on release inside the slider element and clicking the slider.\n   */\n  sliderOnChangeHandler = (event, value) => {\n    if (event.type === 'click') {\n      this.setState({tempDuty: parseFloat(value.toFixed(2))}, this.sliderOnReleaseHandler);\n    }\n    this.setState({tempDuty: parseFloat(value.toFixed(2))});\n  };\n\n  sliderOnReleaseHandler = async () => {\n    if (this.state.tempDuty !== this.props.duty) {\n      this.setState({trans: true});\n      this.setState({snackOpen: false});\n      const {state, timerOn, timerOff, timerState, deviceId, alias, index} = this.props;\n      const deviceConfig = this.stateToConfig(\n        this.state.tempDuty,\n        state,\n        timerOn,\n        timerOff,\n        timerState,\n        alias,\n        deviceId,\n      );\n      await this.props.updateDeviceConfig(deviceConfig, index);\n      if (this.state.tempDuty !== this.props.duty) {\n        this.setState({tempDuty: this.props.duty});\n      }\n      this.setState({trans: false});\n      this.setState({snackOpen: true, snackMessage: 'Dispositivo actualizado'});\n    }\n  };\n\n  render() {\n    const {classes} = this.props;\n    const {snackOpen, snackMessage, tempDuty, trans} = this.state;\n\n    return (\n      <Box width=\"100%\">\n        <Typography className={classes.nameContainer}>Control de intensidad</Typography>\n\n        <Box width=\"100%\" className={classes.sliderContainer} borderRadius={12}>\n          <div className={classes.rangeLabel}>\n            <Typography>0%</Typography>\n            <Typography>100%</Typography>\n          </div>\n          <div className={classes.dutyContainer}>\n            <IoledSlider\n              value={tempDuty}\n              min={0}\n              max={1}\n              step={0.05}\n              valueLabelDisplay=\"auto\"\n              onChange={this.sliderOnChangeHandler}\n              onChangeCommitted={this.sliderOnReleaseHandler}\n            />\n          </div>\n\n          <Snackbar\n            anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n            onClose={() => {\n              this.setState({snackOpen: false});\n            }}\n            open={snackOpen}\n            autoHideDuration={2000}\n          >\n            <SnackbarContent\n              style={{\n                backgroundColor: '#00EAA6',\n                color: 'white',\n              }}\n              message={snackMessage}\n            />\n          </Snackbar>\n\n          <Backdrop className={classes.backdrop} open={trans}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return state.devices[ownProps.index];\n};\n\nexport default connect(mapStateToProps, {updateDeviceConfig})(withStyles(styles)(SliderContainer));\n"]},"metadata":{},"sourceType":"module"}