{"ast":null,"code":"import _objectSpread from \"/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport default ((state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'LIST_DEVICES':\n      return payload;\n\n    case 'UPDATE_DEVICE':\n      return state.map((device, index) => {\n        if (index !== payload.index) {\n          return device;\n        }\n\n        return _objectSpread({}, device, {}, payload.device.config);\n      });\n\n    case 'GET_STATE':\n      return state.map((device, index) => {\n        if (index !== payload.index) {\n          return device;\n        }\n\n        return _objectSpread({}, device, {}, payload.state);\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/cristian/Documents/iOLED/DEV/microservices/front-app-web-iOLED-react/src/reducers/devicesReducer.js"],"names":["state","type","payload","map","device","index","config"],"mappings":";AAAA,gBAAe,CAACA,KAAK,GAAG,EAAT,EAAa;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAb,KAAiC;AAC9C,UAAQD,IAAR;AACE,SAAK,cAAL;AACE,aAAOC,OAAP;;AACF,SAAK,eAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAU,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClC,YAAIA,KAAK,KAAKH,OAAO,CAACG,KAAtB,EAA6B;AAC3B,iBAAOD,MAAP;AACD;;AACD,iCACKA,MADL,MAEKF,OAAO,CAACE,MAAR,CAAeE,MAFpB;AAID,OARM,CAAP;;AASF,SAAK,WAAL;AACE,aAAON,KAAK,CAACG,GAAN,CAAU,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClC,YAAIA,KAAK,KAAKH,OAAO,CAACG,KAAtB,EAA6B;AAC3B,iBAAOD,MAAP;AACD;;AACD,iCACKA,MADL,MAEKF,OAAO,CAACF,KAFb;AAID,OARM,CAAP;;AASF;AACE,aAAOA,KAAP;AAxBJ;AA0BD,CA3BD","sourcesContent":["export default (state = [], {type, payload}) => {\n  switch (type) {\n    case 'LIST_DEVICES':\n      return payload;\n    case 'UPDATE_DEVICE':\n      return state.map((device, index) => {\n        if (index !== payload.index) {\n          return device;\n        }\n        return {\n          ...device,\n          ...payload.device.config,\n        };\n      });\n    case 'GET_STATE':\n      return state.map((device, index) => {\n        if (index !== payload.index) {\n          return device;\n        }\n        return {\n          ...device,\n          ...payload.state,\n        };\n      });\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}